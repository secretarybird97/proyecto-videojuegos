void EstadoJugadorMOVER::update(Jugador &player, double dt) {
  Coordenadas p = player.get_posicion_mundo();

  if (player.en_colision) {
    float mag = std::sqrt(player.offsetoverlap.x * player.offsetoverlap.x +
                          player.offsetoverlap.y * player.offsetoverlap.y);
    float rx = player.offsetoverlap.x / mag;
    float ry = player.offsetoverlap.y / mag;

    p.x = (p.x + rx * (-direccion.x) * velocidad);
    p.y = (p.y + ry * (-direccion.y) * velocidad);
  } else {
    if ((p.x >= 997 && direccion.x == 1) || (p.x <= 37 && direccion.x == -1)) {
      p.x = p.x;
      p.y += (velocidad * direccion.y);
    } else {
      p.x += (velocidad * direccion.x);
      p.y += (velocidad * direccion.y);
    }
  }
  player.set_posicion_mundo(p);
  player.get_sprite()->play_frame(1, frames_actual_ani % frames_maxim_ani);
  if (frame_dt > 5) {
    frame_dt = 0;
    frames_actual_ani++;
  }
  frame_dt++;
};